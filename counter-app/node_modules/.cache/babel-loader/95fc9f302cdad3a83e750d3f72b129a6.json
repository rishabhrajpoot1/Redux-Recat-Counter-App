{"ast":null,"code":"import { createStore } from \"redux\";\n\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    value: 0,\n    step: 1,\n    max: Infinity\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"increment\":\n      return { ...state,\n        value: state.value + state.step\n      };\n\n    case \"decrement\":\n      if (state.value > 0) {\n        return { ...state,\n          value: state.value - state.step\n        };\n      } else {\n        return { ...state,\n          value: 0\n        };\n      }\n\n    case \"updateState\":\n      return { ...state,\n        step: action.payload\n      };\n\n    case \"updateMax\":\n      return { ...state,\n        max: action.payload\n      };\n\n    case \"reset\":\n      return { ...state,\n        value: 0,\n        step: 1,\n        max: Infinity\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/rishabh/Documents/react-redux-counter-app/src/store/index.js"],"names":["createStore","reducer","state","value","step","max","Infinity","action","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,SAASC,OAAT,GAAuE;AAAA,MAAtDC,KAAsD,uEAA9C;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE,CAAlB;AAAqBC,IAAAA,GAAG,EAAEC;AAA1B,GAA8C;AAAA,MAARC,MAAQ;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE;AAAvC,OAAP;;AACF,SAAK,WAAL;AACE,UAAIF,KAAK,CAACC,KAAN,GAAc,CAAlB,EAAqB;AACnB,eAAO,EAAE,GAAGD,KAAL;AAAYC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE;AAAvC,SAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAE,GAAGF,KAAL;AAAYC,UAAAA,KAAK,EAAE;AAAnB,SAAP;AACD;;AACH,SAAK,aAAL;AACE,aAAO,EAAE,GAAGD,KAAL;AAAYE,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAzB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYG,QAAAA,GAAG,EAAEE,MAAM,CAACE;AAAxB,OAAP;;AACF,SAAK,OAAL;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYC,QAAAA,KAAK,EAAE,CAAnB;AAAsBC,QAAAA,IAAI,EAAE,CAA5B;AAA+BC,QAAAA,GAAG,EAAEC;AAApC,OAAP;;AACF;AACE,aAAOJ,KAAP;AAhBJ;AAkBD;;AAED,IAAIQ,KAAK,GAAGV,WAAW,CAACC,OAAD,CAAvB;AAEA,eAAeS,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nfunction reducer(state = { value: 0, step: 1, max: Infinity }, action) {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return { ...state, value: state.value + state.step };\r\n    case \"decrement\":\r\n      if (state.value > 0) {\r\n        return { ...state, value: state.value - state.step };\r\n      } else {\r\n        return { ...state, value: 0 };\r\n      }\r\n    case \"updateState\":\r\n      return { ...state, step: action.payload };\r\n    case \"updateMax\":\r\n      return { ...state, max: action.payload };\r\n    case \"reset\":\r\n      return { ...state, value: 0, step: 1, max: Infinity };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet store = createStore(reducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}